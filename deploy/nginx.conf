server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    access_log  /var/log/nginx/host.access.log  main;
    error_log  /var/log/nginx/error.log  error;

    location / {
        root   /usr/share/nginx/html; # nginx的静态资源目录
        index  index.html index.htm;
        add_header Cache-Control "public, max-age=2592000, immutable";

        # 防止 index.html 被缓存
        # 如果 index.html 被缓存会导致获取的都是旧的 index.html 所引用的静态资源
        # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control#preventing_caching
        if ($uri ~* /index.html?$) {
            # no-store 指令用来防止缓存
            # 同时设置 max-age=0 来清理之前的缓存
            add_header Cache-Control "no-store, max-age=0";
        }

        ## 替换 base 标签中的 href 值
        # 该配置一般是在上级 NGINX 中进行设置
        # 一般的使用场景是，当需要通过上级 NGINX 以子路径的方式分配域名时，此时需要为页面 URL
        # 添加一个路径前缀，为了避免依赖上级 NGINX 配置的路径，需要在上级 NGINX 中重写 baseHref
        # 的值，以避免添加子路径后，页面资源路径错误的问题
        # 具体原理可参照前面 baseHref 的设置说明
        #set $base_href_tag '<base href="${BASE_HREF}"';
        # https://nginx.org/en/docs/http/ngx_http_sub_module.html
        #sub_filter '<base href="/"' $base_href_tag;

        # https://nginx.org/en/docs/http/ngx_http_core_module.html#try_files
        try_files $uri /index.html;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
